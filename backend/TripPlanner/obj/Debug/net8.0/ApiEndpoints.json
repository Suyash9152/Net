[
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_3",
    "RelativePath": "",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TripPlanner.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "TripPlanner.Models.Login",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TripPlanner.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/auth/signup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "TripPlanner.Models.Signup",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TripPlanner.Controllers.ContactController",
    "Method": "PostContactMessage",
    "RelativePath": "api/Contact",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "contactMessage",
        "Type": "TripPlanner.Models.ContactMessage",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TripPlanner.Controllers.ContactController",
    "Method": "GetMessages",
    "RelativePath": "api/Contact",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TripPlanner.Controllers.TravelPlanController",
    "Method": "CreateTravelPlan",
    "RelativePath": "api/TravelPlan",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "travelPlan",
        "Type": "TripPlanner.Models.TripPlanner.Models.TravelPlan",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TripPlanner.Controllers.TravelPlanController",
    "Method": "GetTravelPlanById",
    "RelativePath": "api/TravelPlan/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_4",
    "RelativePath": "health",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TripPlanner.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TripPlanner.WeatherForecast, TripPlanner, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]